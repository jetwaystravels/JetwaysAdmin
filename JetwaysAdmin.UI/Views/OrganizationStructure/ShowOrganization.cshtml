@using JetwaysAdmin.Entity
@model List<JetwaysAdmin.Entity.LegalEntity>
@{
    Layout = "~/Views/Shared/OfficeLegalentity.cshtml";
    var Data = Model;
}

<style>

    .open-btn {
        cursor: pointer;
    }

    .popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 253px;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        z-index: 1000;
        overflow: hidden;
        background: rgba(255, 255, 255, 0.8);
    }

    #popupOverlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255,255,255,0.5);
        z-index: 999;
    }

    /* Header fixed inside popup */
    .popup-header {
        padding: 8px 15px;
        background: #0e93d8;
        color: white;
        font-size: 14px;
        font-weight: bold;
        position: sticky;
        top: 0;
        z-index: 2;
    }

    /* Search box */
    .search-box {
        padding: 0 12px 0;
        border-bottom: none;
        background: #fff;
        position: sticky;
        top: 36px;
        z-index: 2;
    }

        .search-box input {
            width: 100%;
            padding: 8px 30px;
            border-bottom: 1px solid #ccc;
            font-size: 14px;
            margin-right: 8%;
            border-right: 0;
            border-top: 0;
            border-left: 0;
            background: #fff;
        }

    /* Scrollable list */
    .user-list {
        max-height: 240px;
        overflow-y: auto;
        overflow-x: hidden;
        margin: 0;
        padding: 12px;
        list-style: none;
        background: #fff;
    }

        .user-list li {
            padding: 4px 12px;
            border-radius: 8px;
            transition: background 0.2s;
            margin-bottom: 6px;
            border-bottom: 1px solid #f0f0f0;
            font-size: 12px;
        }

            .user-list li:last-child {
                margin-bottom: 0;
            }

            .user-list li:hover {
                background: #eef3ff;
                border-radius: 8px;
            }

    /* Close button */
    .close-btn {
        position: absolute;
        top: 10px;
        right: 12px;
        font-size: 18px;
        background: none;
        border: none;
        cursor: pointer;
        color: #fff;
    }
</style>

<main id="main" class="main">
    <div class="pcoded-main-container">
        <div class="pcoded-wrapper">
            <!-- Page-header start -->
            <div class="page-header">
                <div class="page-block">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <div class="page-header-title">
                                <h5 class="m-b-10">Offices</h5>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <ul class="breadcrumb">
                                <li class="breadcrumb-item"><a href="#">Setting</a></li>
                                <li class="breadcrumb-item"><a href="#">Manage Customers</a></li>
                                <li class="breadcrumb-item">Manage Staff</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Page-header end -->
            <div class="pcoded-inner-content">
                <!-- Main-body start -->
                <div class="main-body">
                    <div class="page-wrapper">
                        <div class="page-body">
                            @if (TempData["LegalAdd"] != null)
                            {
                                <div class="alert alert-success">
                                    <strong></strong> @TempData["LegalAdd"]
                                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                                </div>
                            }
                            @if (TempData["SuccessMessagedealcode"] != null)
                            {
                                <div class="alert alert-success">
                                    <strong></strong> @TempData["SuccessMessagedealcode"]
                                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                                </div>
                            }
                            @if (TempData["ManageDataUpdate"] != null)
                            {
                                <div class="alert alert-success">
                                    <strong></strong> @TempData["ManageDataUpdate"]
                                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                                </div>
                            }
                            @if (TempData["DuplicateError"] != null)
                            {
                                <div class="alert alert-danger" style="color:white;background-color:#e74c3c;padding:10px;width:80%;">
                                    <strong>Warning:</strong> @TempData["DuplicateError"]
                                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                                </div>
                            }
                            @if (TempData["officeupdate_message"] != null)
                            {
                                <div class="alert alert-success">
                                    <strong></strong> @TempData["officeupdate_message"]
                                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                                </div>
                            }

                            <div class="card">
                                <div class="card-block">
                                    <div class="d-flex justify-content-between m-b-10 top-lable">
                                        <div class="col-lg-4" style="padding-left:0;">
                                            <form class="form-material">
                                                <div class="form-group form-primary" style="width:280px;">
                                                    <input type="text" name="search" class="form-control" id="searchInput" placeholder="Search by company name">
                                                    <span class="form-bar"></span>
                                                    <label class="float-label"><i class="fa fa-search m-r-10"></i>Search</label>
                                                </div>
                                            </form>
                                        </div>
                                        <div class="col-lg-8 text-right mt-3" style="padding-right: 0;">
                                            <button id="btnCards" class="btn btn-primary modl"><i class="fa fa-th-large mr-2"></i>Cards</button>
                                            <button id="btnTable" class="btn btn-outline">
                                                <i class="fa fa-list mr-2"></i>Table
                                            </button>
                                            <button type="button" id="officepopup" class="btn btn-primary modl"
                                                    data-legal-entity-code="@ViewBag.LegalEntityCode"
                                                    data-legal-entity-name="@ViewBag.LegalEntityName"
                                                    data-legal-entity-idLegal="@ViewBag.Id"
                                                    data-toggle="modal" data-target="#addOfficeModal"
                                                    style="font-size: 13px; font-weight:600;">
                                                + Add office
                                            </button>

                                            <div class="dropdown-primary open">
                                                <div class="dot-icon" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"><i class="fa fa-ellipsis-h" aria-hidden="true" style="vertical-align: bottom;"></i></div>
                                                <div class="dropdown-menu" aria-labelledby="dropdown-2" data-dropdown-in="fadeIn" data-dropdown-out="fadeOut">
                                                    <a class="dropdown-item" href="#">Update default office</a>
                                                    <a class="dropdown-item" href="#">Upload offices</a>
                                                    <a class="dropdown-item" href="#">Download office list</a>
                                                    <a class="dropdown-item" href="#">Assign users</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div id="officeList">
                                        @{
                                            bool isFirst = true;
                                        }
                                        @foreach (var office in Model)
                                        {
                                            <div class="office-card">
                                                <div class="d-flex justify-content-between align-items-center office-header" style="border-bottom: #ddd 1px solid; padding-bottom: 10px;">
                                                    <div class="col-lg-9" style="padding-left:0;">
                                                        <span class="captext company-name" style="text-transform: capitalize;">@office.LegalEntityName — <span class="tag tag-default">@office.City</span></span>
                                                    </div>
                                                    <div>
                                                        <div class="pill pill-head">
                                                            @(string.IsNullOrWhiteSpace(office.OfficeType) ? "Head Office" : office.OfficeType)
                                                        </div>
                                                    </div>
                                                    <div class="toggle-arrow"><i class="fa fa-angle-up" aria-hidden="true"></i></div>
                                                </div>
                                                <div style="display:flex; padding: 0 14px 6px;">
                                                    <div class="map-bx"><img class="img-fluid" src="../assets/images/map-1.png" alt="map"></div>
                                                    <div class="details mt-3" style="display:flex;">
                                                        <div class="address-section">
                                                            <div>
                                                                <div class="office-info">
                                                                    <i class="fa fa-map-marker"></i>
                                                                    <div>
                                                                        <p>@office.AddressLine1 @office.AddressLine2 @office.PostalCode</p>
                                                                    </div>
                                                                </div>
                                                                @* <div class="office-info">
                                                                    <i class="fa fa-building" aria-hidden="true"></i>
                                                                    <div>
                                                                        <p><strong>Office entity name:</strong></p>
                                                                        <p class="captext" style="text-transform: capitalize;">@office.LegalEntityName</p>
                                                                    </div>
                                                                </div> *@
                                                                <div class="office-info">
                                                                    <i class="fa fa-envelope" aria-hidden="true"></i>
                                                                    <div>
                                                                        @* <p class="captext" style="text-transform: capitalize;">@office.FirstName</p> *@
                                                                        <p class="captext" style="text-transform: capitalize;">@office.BussinesEmail</p>
                                                                    </div>
                                                                </div>

                                                                <div class="office-info open-btn" data-legal="@office.LegalEntityCode">
                                                                    <i class="fa fa-user" aria-hidden="true"></i>
                                                                    @* <p style="--tw-text-opacity: 1; color: rgba(4, 120, 87, var(--tw-text-opacity));">
                                                                        @{
                                                                            var employeesByCode = ViewBag.EmployeesByCode as IDictionary<string, List<CustomersEmployee>>;
                                                                            var countForThisOffice = 0;
                                                                            if (employeesByCode != null && employeesByCode.TryGetValue(office.LegalEntityCode, out var listForOffice))
                                                                            {
                                                                                countForThisOffice = listForOffice?.Count ?? 0;
                                                                            }
                                                                        }
                                                                        @countForThisOffice users assigned
                                                                    </p> *@


                                                                    @{
                                                                        var employeesByCode = ViewBag.EmployeesByCode as IDictionary<string, List<CustomersEmployee>>;
                                                                        var countForThisOffice = 0;
                                                                        if (employeesByCode != null && employeesByCode.TryGetValue(office.LegalEntityCode, out var listForOffice))
                                                                        {
                                                                            countForThisOffice = listForOffice?.Count ?? 0;
                                                                        }
                                                                        var color = countForThisOffice == 0 ? "#DC2626" : "#047857"; // red if 0, green otherwise
                                                                    }
                                                                    <p style="color:@color">
                                                                        @countForThisOffice users assigned
                                                                    </p>



                                                                </div>


                                                                <div class="office-info">
                                                                    <i class="fa fa-globe" aria-hidden="true"></i>
                                                                    <div>
                                                                        <p><strong>Sales Region:</strong><span class="pl-1">@office.Country</span></p>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-primary m-t-2 text-right office-footer">
                                                    <button class="btn btn-outline waves-effect waves-light"
                                                            data-id="@office.Id"
                                                            data-idlegal="@ViewBag.Id"
                                                            data-legalentitycode="@office.LegalEntityCode"
                                                            data-legalentitycodeparent="@ViewBag.LegalEntityCode"
                                                            data-legalentityname="@ViewBag.LegalEntityName"
                                                            data-toggle="modal"
                                                            data-target="#updateOfficeModal">
                                                        Edit
                                                    </button>
                                                    <button class="btn btn-danger waves-effect waves-light">Delete</button>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <!-- Table view -->
                                    <div id="tableWrap" class="hidden overflow-x-auto border rounded-xl">
                                        <table class="min-w-full text-sm">
                                            <thead class="bg-gray-50 text-gray-600">
                                                <tr>
                                                    <th class="font-medium px-4 py-3">Office</th>
                                                    <th class="font-medium px-4 py-3">City</th>
                                                    <th class="font-medium px-4 py-3">Contact</th>
                                                    <th class="font-medium px-4 py-3">Users</th>
                                                    <th class="font-medium px-4 py-3">Sales Region</th>
                                                    <th class="px-4 py-3"></th>
                                                </tr>
                                            </thead>
                                            <tbody id="tbody" class="divide-y"></tbody>
                                        </table>
                                    </div>
                                </div>

                                <!-- users assigned start -->
                                <div id="popupOverlay"></div>
                                <div class="popup" id="popupBox">
                                    <div class="popup-header">
                                        Users Assigned
                                        <button class="close-btn" id="closeBtn">×</button>
                                    </div>
                                    <div class="search-box">
                                        <input type="text" placeholder="Search user" class="searchInput">
                                        <i class="fa fa-search m-r-10" style="position: absolute;top: 12px; left: 18px;"></i>
                                    </div>
                                    <ul class="user-list" id="userList">
                                        <!-- Filled dynamically based on LegalEntityCode -->
                                    </ul>
                                </div>
                                <!-- users assigned end -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <!-- Add Office Modal -->
    <div class="modal fade office-modal" id="addOfficeModal" tabindex="-1" role="dialog" aria-labelledby="addOfficeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content rounded-4 border-0 shadow-sm">
                <div class="modal-header border-0 pb-0">
                    <h5 class="modal-title font-weight-bold">Add a new office</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="m-b-25">
                        <ul class="nav nav-tabs">
                            <li class="p-10">
                                <a href="#" onclick="showOrganization(); return false;">Organization</a>
                            </li>
                            <li class="p-10">
                                <a id="suppliersTab"
                                   href="#"
                                   data-idlegal="@ViewBag.Id"
                                   data-legal-code="@ViewBag.LegalEntityCode"
                                   data-legal-name="@ViewBag.LegalEntityName"
                                   onclick="showSuppliers(); return false;">
                                    Suppliers &amp; Deal Code
                                </a>
                            </li>
                            <li class="p-10">
                                <a href="#" id="OfficeAdd2" onclick="showAssignStaff(); return false;">Assign Staff</a>
                            </li>
                        </ul>
                    </div>

                    <div class="modal-content" id="addOfficeModalContent" style="border:none;"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal office-modal fade" id="updateOfficeModal" tabindex="-1" role="dialog" aria-labelledby="updateOfficeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content rounded-4 border-0 shadow-sm">
                <div class="modal-header border-0 pb-0">
                    <h5 class="modal-title font-weight-bold">Update office</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="m-b-25">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item"><a class="nav-link active" data-toggle="tab" href="#OrganizationUpdate" role="tab">Organization</a></li>
                            <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#suppliersdealcodeUpdate" role="tab">Suppliers & Deal Code</a></li>
                            <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#assignstaffUpdate" role="tab">Assign Staff</a></li>
                        </ul>
                    </div>
                    <div class="modal-content" id="updateOfficeModalContent" style="border:none;"></div>
                </div>
            </div>
        </div>
    </div>
</main>

<footer>
    <script src="~/assets/js/custom/addlegalentity.js"></script>
    <script src="~/assets/js/custom/datevalidation.js"></script>
    <script src="~/assets/js/custom/countrycurrency.js"></script>
    <link rel="stylesheet" type="text/css" href="~/assets/css/select2.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    <script>
        $('.langOpt').each(function () {
            var placeholderText = $(this).data('placeholder') || 'Select option';
            $(this).multiselect({ placeholder: placeholderText });
        });
    </script>
    <script> $(function () { $(".select").select2(); }); </script>
    <script> $(document).ready(function () { $('.langOpt').multiselect(); }); </script>

    <script>
        $(document).ready(function () {
            $('#addOfficeModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var legalEntityCode = button.data('legal-entity-code');
                var legalEntityName = button.data('legal-entity-name');
                var IdLegal = button.data('legal-entity-idLegal');

                $.ajax({
                    url: '@Url.Action("ShowOffice", "OrganizationStructure")',
                    type: 'GET',
                    data: { LegalEntityCode: legalEntityCode, LegalEntityName: legalEntityName, IdLegal: IdLegal },
                    success: function (response) { $('#addOfficeModalContent').html(response); },
                    error: function () { $('#addOfficeModalContent').html('<div class="p-3 text-danger">Failed to load office form.</div>'); }
                });
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#updateOfficeModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var id = button.data('id');
                var idLegal = button.data('idlegal');
                var legalEntityCode = button.data('legalentitycode');
                var legalentitycodeparent = button.data('legalentitycodeparent');
                var legalEntityName = button.data('legalentityname');

                $.ajax({
                    url: '@Url.Action("UpdateOffice", "OrganizationStructure")',
                    type: 'GET',
                    data: {
                        Id: id,
                        IdLegal: idLegal,
                        LegalEntityCode: legalEntityCode,
                        LegalEntityCodeParent: legalentitycodeparent,
                        LegalEntityName: legalEntityName
                    },
                    success: function (response) { $('#updateOfficeModalContent').html(response); },
                    error: function () { $('#updateOfficeModalContent').html('<div class="p-3 text-danger">Failed to load update form.</div>'); }
                });
            });
        });
    </script>

    <script>
        function loadStates() {
            var selectedCountryId = document.getElementById("CountryId").value;
            if (selectedCountryId) {
                fetch('/OrganizationStructure/LoadStates?countryId=' + selectedCountryId, { method: 'GET' })
                .then(response => response.json())
                .then(states => {
                    const stateSelect = document.getElementById("StateId");
                    stateSelect.innerHTML = '<option value="">-- Select State --</option>';
                    states.forEach(function (state) {
                        const option = document.createElement("option");
                        option.value = state.stateID; option.text = state.stateName;
                        stateSelect.appendChild(option);
                    });
                });
            }
        }
        function loadCities() {
            var stateId = document.getElementById("StateId").value;
            fetch('/OrganizationStructure/LoadCities?stateId=' + stateId)
            .then(response => response.json())
            .then(cities => {
                var citySelect = document.getElementById("CityId");
                citySelect.innerHTML = '<option value="">-- Select City --</option>';
                cities.forEach(function (city) {
                    var option = document.createElement("option");
                    option.value = city.cityID; option.text = city.cityName;
                    citySelect.appendChild(option);
                });
            });
        }
    </script>

    <script> $(function () { $('[data-toggle="tooltip"]').tooltip(); }); </script>

    <script>
        $(document).on('click', '#addUser', function (e) {
            e.preventDefault();
            var isValid = addOfficeUSer(e);
            if (!isValid) { return false; }
            var form = $('#addOfficeForm')[0];
            var fd = new FormData(form);
            $.ajax({
                url: '/OrganizationStructure/AddOffice',
                type: 'POST',
                data: fd, processData: false, contentType: false,
                success: function (res) {
                    if (res && res.success) {
                        $('#addOfficeModalContent').load(res.url, function () {
                            $('#addOfficeModal').modal('show');
                            var tab2 = $('a[href="#suppliersdealcode"]'); tab2.tab('show');
                        });
                    } else if (res && res.duplicate) {
                        var html = ''
                          + '<div class="alert alert-danger" style="color:white;background-color:#e74c3c;padding:10px;width:80%;">'
                          + '  <strong>Warning:</strong> ' + (res.message || 'Duplicate entry found.')
                          + '  <span class="closebtn" onclick="this.parentElement.style.display=\'none\';">&times;</span>'
                          + '</div>';
                        var $target = $('#addOfficeModal').hasClass('show') ? $('#addOfficeModalContent') : $('#duplicateAlertContainer');
                        $target.find('.alert.alert-danger').remove(); $target.prepend(html);
                    } else {
                        alert((res && res.message) || 'Failed to add office.');
                    }
                },
                error: function () { alert('Something went wrong while saving.'); }
            });
        });
    </script>

    <script>
        $(document).on('click', '#backToSuppliers', function (e) {
            e.preventDefault();
            var idLegal = $(this).data("idlegal");
            var legalEntityCode = $(this).data("legal-code");
            var legalEntityName = $(this).data("legal-name");

            $.ajax({
                url: '/OrganizationStructure/ShowOffice',
                type: 'GET',
                data: { IdLegal: idLegal, LegalEntityCode: legalEntityCode, LegalEntityName: legalEntityName },
                success: function (html) {
                    $('#addOfficeModalContent').html(html);
                    $('#addOfficeModal').modal('show');
                    var org2 = document.getElementById('Organization');
                    if (org2) { org2.style.display = 'none'; org2.classList.remove('active','show'); }
                    var asn2 = document.getElementById('assignstaff');
                    if (asn2) { asn2.style.display = 'none'; asn2.classList.remove('active','show'); }
                    var sup2 = document.getElementById('suppliersdealcode');
                    if (sup2) { sup2.style.display = 'block'; sup2.classList.add('active','show'); }
                },
                error: function () { alert('Failed to load suppliers.'); }
            });
        });
    </script>

    <script>
        $(document).on('click', '#suppliersTab', function (e) {
            e.preventDefault();
            var idLegal = $(this).data("idlegal");
            var legalEntityCode = $(this).data("legal-code");
            var legalEntityName = $(this).data("legal-name");
            $.ajax({
                url: '/OrganizationStructure/ShowOffice',
                type: 'GET',
                data: { IdLegal: idLegal, LegalEntityCode: legalEntityCode, LegalEntityName: legalEntityName },
                success: function (html) {
                    $('#addOfficeModalContent').html(html);
                    var org = document.getElementById('Organization');
                    if (org) { org.style.display = 'none'; org.classList.remove('active','show'); }
                    var asn = document.getElementById('assignstaff');
                    if (asn) { asn.style.display = 'none'; asn.classList.remove('active','show'); }
                    var sup = document.getElementById('suppliersdealcode');
                    if (sup) { sup.style.display = 'block'; sup.classList.add('active','show'); }
                    $('#addOfficeModal').one('shown.bs.modal', function () {
                        var org2 = document.getElementById('Organization');
                        if (org2) { org2.style.display = 'none'; org2.classList.remove('active','show'); }
                        var asn2 = document.getElementById('assignstaff');
                        if (asn2) { asn2.style.display = 'none'; asn2.classList.remove('active','show'); }
                        var sup2 = document.getElementById('suppliersdealcode');
                        if (sup2) { sup2.style.display = 'block'; sup2.classList.add('active','show'); }
                    });
                    $('#addOfficeModal').modal('show');
                },
                error: function () { alert('Failed to load suppliers.'); }
            });
        });
    </script>

    <script>
        function showSuppliers() {
            document.getElementById('Organization').style.display = 'none';
            document.getElementById('assignstaff').style.display = 'none';
            document.getElementById('suppliersdealcode').style.display = 'block';
        }
        function showOrganization() {
            document.getElementById('Organization').style.display = 'block';
            document.getElementById('assignstaff').style.display = 'none';
            document.getElementById('suppliersdealcode').style.display = 'none';
        }
        function showAssignStaff() {
            document.getElementById('Organization').style.display = 'none';
            document.getElementById('assignstaff').style.display = 'block';
            document.getElementById('suppliersdealcode').style.display = 'none';
        }
    </script>

    <script>
        function disable(id) {
            var el = document.getElementById(id);
            if (!el) return;
            el.onclick = null;
            el.removeAttribute('href');
            el.tabIndex = -1;
            el.style.pointerEvents = 'none';
            el.style.opacity = '0.5';
            el.style.cursor = 'not-allowed';
        }
        disable('suppliersTab');
        disable('OfficeAdd2');
    </script>

    <script>
        function smartCapitalize(text) {
            return text
                .toLowerCase()
                .replace(/\b\w/g, c => c.toUpperCase());
        }
        document.querySelectorAll(".captext").forEach(el => {
            el.textContent = smartCapitalize(el.textContent);
        });
    </script>

    <script>
        $("#searchInput").on("keyup", function () {
            let value = $(this).val().toLowerCase().trim();
            if (value === "") {
                $("#officeList .office-card").show();
                return;
            }
            $("#officeList .office-card").each(function () {
                let company = $(this).find(".company-name").text().toLowerCase();
                $(this).toggle(company.indexOf(value) > -1);
            });
        });
    </script>

    @* ======= SERIALIZED EMPLOYEE NAMES BY LEGAL ENTITY CODE (Controller must set ViewBag.EmpNamesByCodeJson) ======= *@
    @using Newtonsoft.Json
    <script>
        // Expecting something like: { "WIPD001": [{ FullName: "Suraj Babhu", Designation: "SE" }, ...], "WIPB001": [...] }
        const empNamesByCode = @Html.Raw(ViewBag.EmpNamesByCodeJson ?? "{}");
    </script>

    @* ======= POPUP: FILL BY LEGAL ENTITY CODE & SEARCH ======= *@
    <script>
        const popup = document.getElementById('popupBox');
        const overlay = document.getElementById('popupOverlay');
        const closeBtn = document.getElementById('closeBtn');
        const userList = document.getElementById('userList');
        const searchInput = document.querySelector('.searchInput');

        function openPopup() {
            popup.style.display = 'block';
            overlay.style.display = 'block';
        }
        function closePopup() {
            popup.style.display = 'none';
            overlay.style.display = 'none';
            resetSearch();
        }
        function resetSearch() {
            searchInput.value = '';
            [...userList.querySelectorAll('li')].forEach(li => {
                li.innerHTML = li.textContent;
                li.style.display = 'block';
            });
        }

        function fillUsersFor(code) {
            userList.innerHTML = '';
            const list = (empNamesByCode && empNamesByCode[code]) ? empNamesByCode[code] : [];
            if (!list || list.length === 0) {
                userList.innerHTML = '<li>No employees found.</li>';
                return;
            }
            list.forEach(e => {
                const li = document.createElement('li');
                li.textContent = e.FullName + (e.Designation ? ' — ' + e.Designation : '');
                userList.appendChild(li);
            });
        }

        // Hover OR click opens popup with correct list
        // document.addEventListener('mouseenter', function (e) {
        //     const btn = e.target.closest('.open-btn');
        //     if (!btn) return;
        //     const code = btn.getAttribute('data-legal') || '';
        //     fillUsersFor(code);
        //     openPopup();
        // }, true);

        document.addEventListener('click', function (e) {
            const btn = e.target.closest('.open-btn');
            if (!btn) return;
            const code = btn.getAttribute('data-legal') || '';
            fillUsersFor(code);
            openPopup();
        });

        closeBtn.addEventListener('click', closePopup);
        overlay.addEventListener('click', closePopup);
        document.addEventListener('click', (e) => {
            if (!popup.contains(e.target) && !e.target.closest('.open-btn') && e.target !== overlay) {
                closePopup();
            }
        });

        // Search with highlight
        const users = () => [...userList.querySelectorAll('li')];
        searchInput.addEventListener('keyup', () => {
            const filter = searchInput.value.toLowerCase().trim();
            users().forEach(user => {
                const text = user.textContent;
                if (filter && text.toLowerCase().includes(filter)) {
                    const regex = new RegExp(`(${filter})`, 'gi');
                    user.innerHTML = text.replace(regex, '<mark>$1</mark>');
                    user.style.display = 'block';
                } else if (!filter) {
                    user.innerHTML = text;
                    user.style.display = 'block';
                } else {
                    user.style.display = 'none';
                }
            });
        });
    </script>



    <!-- Start table and card sorting -->

    <script>
        // ============================================
        // DATA PREPARATION FROM SERVER-SIDE MODEL
        // ============================================

        // Convert Razor Model to JavaScript array
        const RAW_OFFICES = [
        @foreach (var office in Model)
        {
            @:{
            @:id: @office.Id,
            @:legalEntityCode: "@office.LegalEntityCode",
            @:legalEntityName: "@office.LegalEntityName",
            @:city: "@office.City",
            @:addressLine1: "@office.AddressLine1",
            @:addressLine2: "@office.AddressLine2",
            @:postalCode: "@office.PostalCode",
            @:businessEmail: "@office.BussinesEmail",
            @:country: "@office.Country",
            @:officetype: "@office.OfficeType",
            @:isHeadOffice: @(office.Id == Model.FirstOrDefault()?.Id ? "true" : "false"),
            @:users: @{
                var employeesByCode = ViewBag.EmployeesByCode as IDictionary<string, List<CustomersEmployee>>;
                var countForThisOffice = 0;
                if (employeesByCode != null && employeesByCode.TryGetValue(office.LegalEntityCode, out var listForOffice))
                {
                    countForThisOffice = listForOffice?.Count ?? 0;
                }
                @countForThisOffice
            }
            @:}@(Model.IndexOf(office) < Model.Count - 1 ? "," : "")
        }
        ];

        // Normalize data
        const normalize = o => ({
            ...o,
            businessEmail: (o.businessEmail || "").toLowerCase(),
            country: o.country || "—",
            fullAddress: `${o.addressLine1} ${o.addressLine2} ${o.postalCode}`.trim()
        });

        let offices = RAW_OFFICES.map(normalize);
        let view = "cards";
        let q = "", country = "all", assignment = "all", sort = "name-asc";

        // ============================================
        // HELPER FUNCTIONS
        // ============================================

        const el = id => document.getElementById(id);

        function smartCapitalize(text) {
            if (!text) return '';
            return text.toLowerCase().replace(/\b\w/g, c => c.toUpperCase());
        }

        function typeClass(isHeadOffice) {
            return isHeadOffice ? 'pill-head' : 'pill-branch';
        }

        function setCountries() {
            const set = new Set(offices.map(o => o.country).filter(Boolean));
            const select = el('country');
            if (select) {
                select.innerHTML = '<option value="all">All countries</option>' +
                    Array.from(set).map(c => `<option value="${c}">${c}</option>`).join('');
            }
        }

        // ============================================
        // FILTERING & SORTING
        // ============================================

        function applyFilters() {
            let list = [...offices];

            // Search filter
            if (q.trim()) {
                const k = q.toLowerCase();
                list = list.filter(o =>
                    (o.legalEntityName || "").toLowerCase().includes(k) ||
                    (o.city || "").toLowerCase().includes(k) ||
                    (o.fullAddress || "").toLowerCase().includes(k) ||
                    (o.businessEmail || "").toLowerCase().includes(k)
                );
            }

            // Country filter
            if (country !== "all") {
                list = list.filter(o => o.country === country);
            }

            // Assignment filter
            if (assignment === "assigned") {
                list = list.filter(o => o.users > 0);
            }
            if (assignment === "unassigned") {
                list = list.filter(o => o.users === 0);
            }

            // Sorting - Head office always first
            list.sort((a, b) => {
                // Head office always comes first
                if (a.isHeadOffice && !b.isHeadOffice) return -1;
                if (!a.isHeadOffice && b.isHeadOffice) return 1;

                // Then apply other sorting
                switch (sort) {
                    case "name-asc":
                        return (a.legalEntityName || "").localeCompare(b.legalEntityName || "");
                    case "name-desc":
                        return (b.legalEntityName || "").localeCompare(a.legalEntityName || "");
                    case "users-desc":
                        return b.users - a.users;
                    case "users-asc":
                        return a.users - b.users;
                    default:
                        return 0;
                }
            });

            return list;
        }

        // ============================================
        // RENDER FUNCTIONS
        // ============================================

        function render() {
            const rows = applyFilters();
            const countEl = el('count');
            if (countEl) countEl.textContent = rows.length;

            // ========== RENDER CARDS VIEW ==========
            // const cardsContainer = el('officeList');
            // if (cardsContainer) {
            //     cardsContainer.innerHTML = rows.map((office, index) => `
            //         <div class="office-card" data-id="${office.id}">
            //             <div class="d-flex justify-content-between align-items-center office-header"
            //                  style="border-bottom: #ddd 1px solid; padding-bottom: 10px; cursor: pointer;"
            //                  onclick="toggleCard(this)">
            //                 <div class="col-lg-9" style="padding-left:0;">
            //                     <span class="captext company-name" style="text-transform: capitalize;">
            //                         ${smartCapitalize(office.legalEntityName)} —
            //                         <span class="tag tag-default">${office.city}</span>
            //                     </span>
            //                 </div>

            //                 <div class="toggle-arrow"><i class="fa fa-angle-up" aria-hidden="true"></i></div>
            //             </div>

            //             <div class="office-details" style="display:flex; padding: 0 14px 6px;">
            //                 <div class="map-bx">
            //                     <img class="img-fluid" src="../assets/images/map-1.png" alt="map">
            //                 </div>
            //                 <div class="details mt-3" style="display:flex; flex: 1;">
            //                     <div class="address-section" style="flex: 1;">
            //                         <div>
            //                             <div class="office-info">
            //                                 <i class="fa fa-map-marker"></i>
            //                                 <div>
            //                                     <p>${office.fullAddress}</p>
            //                                 </div>
            //                             </div>

            //                             <div class="office-info">
            //                                 <i class="fa fa-envelope" aria-hidden="true"></i>
            //                                 <div>
            //                                     <p class="captext" style="text-transform: capitalize;">
            //                                         ${office.businessEmail}
            //                                     </p>
            //                                 </div>
            //                             </div>

            //                             <div class="office-info open-btn" data-legal="${office.legalEntityCode}">
            //                                 <i class="fa fa-user" aria-hidden="true"></i>
            //                                      <p style="color: ${office.users === 0 ? '#DC2626' : '#047857'};">
            //                                              ${office.users} users assigned
            //                                     </p>
            //                             </div>

            //                             <div class="office-info">
            //                                 <i class="fa fa-globe" aria-hidden="true"></i>
            //                                 <div>
            //                                     <p><strong>Sales Region:</strong><span class="pl-1">${office.country}</span></p>
            //                                 </div>
            //                             </div>
            //                         </div>
            //                     </div>
            //                 </div>
            //             </div>

            //             <div class="form-primary m-t-2 text-right office-footer">
            //                 <button class="btn btn-outline waves-effect waves-light"
            //                         data-id="${office.id}"
            //                         data-idlegal="@ViewBag.Id"
            //                         data-legalentitycode="${office.legalEntityCode}"
            //                         data-legalentitycodeparent="@ViewBag.LegalEntityCode"
            //                         data-legalentityname="@ViewBag.LegalEntityName"
            //                         data-toggle="modal"
            //                         data-target="#updateOfficeModal">
            //                     Edit
            //                 </button>
            //                 <button class="btn btn-danger waves-effect waves-light"
            //                         onclick="deleteOffice(${office.id})">
            //                     Delete
            //                 </button>
            //             </div>
            //         </div>
            //     `).join('');
            // }

            // ========== RENDER TABLE VIEW ==========
            const tbodyEl = el('tbody');
            if (tbodyEl) {

                tbodyEl.innerHTML = rows.map((office, index) => `
                    <tr class="hover:bg-gray-50">
                        <td class="px-4 py-3">
                            <div class="font-medium text-gray-900">
                                ${smartCapitalize(office.legalEntityName)}
                            </div>
                               <div class="text-xs text-gray-600 flex items-center gap-2"><span class="pill pill-head">• ${office?.officetype?.trim() || 'Head Office'}</span>
                                <span>• ${office.fullAddress}</span>
                            </div>
                        </td>
                        <td class="px-4 py-3">${office.city}</td>
                        <td class="px-4 py-3">${office.businessEmail}</td>
                        <td class="px-4 py-3">
                            ${office.users > 0
                                ? `<span class="pill pill-head" style="background:#ECFDF5;color:#065F46">${office.users}</span>`
                                : `<span class="pill pill-danger">0</span>`
                            }
                        </td>
                        <td class="px-4 py-3">${office.country}</td>
                        <td class="px-4 py-3 text-right">
                            <div class="inline-flex gap-2">
                                <button class="btn btn-outline"
                                        data-id="${office.id}"
                                        data-idlegal="@ViewBag.Id"
                                        data-legalentitycode="${office.legalEntityCode}"
                                        data-legalentitycodeparent="@ViewBag.LegalEntityCode"
                                        data-legalentityname="@ViewBag.LegalEntityName"
                                        data-toggle="modal"
                                        data-target="#updateOfficeModal">
                                    Edit
                                </button>
                                <button class="btn btn-danger" onclick="deleteOffice(${office.id})">
                                    Delete
                                </button>
                            </div>
                        </td>
                    </tr>
                `).join('');
            }
        }

        // ============================================
        // INTERACTION FUNCTIONS
        // ============================================

        function toggleCard(element) {
            const card = $(element).closest('.office-card');
            card.toggleClass('collapsed');

            // Toggle details visibility
            const details = card.find('.office-details, .office-footer');
            details.slideToggle(300);
        }

        function deleteOffice(id) {
            if (confirm('Are you sure you want to delete this office?')) {
                // Remove from local array
                offices = offices.filter(o => o.id !== id);
                render();

                // Optional: Send delete request to server
                $.ajax({
                    url: '@Url.Action("DeleteOffice", "OrganizationStructure")',
                    type: 'POST',
                    data: { id: id },
                    success: function(response) {
                        if (response.success) {
                            showAlert('Office deleted successfully', 'success');
                        } else {
                            showAlert('Failed to delete office', 'danger');
                        }
                    },
                    error: function() {
                        showAlert('Error deleting office', 'danger');
                    }
                });
            }
        }

        function showAlert(message, type) {
            const alertHtml = `
                <div class="alert alert-${type}">
                    <strong></strong> ${message}
                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                </div>
            `;
            $('.page-body').prepend(alertHtml);
            setTimeout(() => $('.alert').fadeOut(), 5000);
        }

        // ============================================
        // EVENT LISTENERS
        // ============================================

        // Search functionality
        $("#searchInput").on("keyup", function () {
            q = $(this).val().trim();
            render();
        });

        // Country filter (if you have a country dropdown)
        $(document).on('change', '#country', function() {
            country = $(this).val();
            render();
        });

        // Assignment filter (if you have assignment dropdown)
        $(document).on('change', '#assignment', function() {
            assignment = $(this).val();
            render();
        });

        // Sort filter (if you have sort dropdown)
        $(document).on('change', '#sort', function() {
            sort = $(this).val();
            render();
        });

        // ============================================
        // INITIALIZATION
        // ============================================

        $(document).ready(function () {
            // Set initial view - show cards, hide table
            $('#officeList').show();
            $('#tableWrap').hide();

            // View toggle - Cards button
            $('#btnCards').on('click', function () {
                $(this).addClass('btn-active').removeClass('btn-outline');
                $('#btnTable').removeClass('btn-active').addClass('btn-outline');

                // Toggle sections within .card-block
                $('#officeList').show();
                $('#tableWrap').hide();
            });

            // View toggle - Table button
            $('#btnTable').on('click', function () {
                $(this).addClass('btn-active').removeClass('btn-outline');
                $('#btnCards').removeClass('btn-active').addClass('btn-outline');

                // Toggle sections within .card-block
                $('#tableWrap').show();
                $('#officeList').hide();
            });

            // Initialize countries dropdown if exists
            setCountries();

            // Initial render
            render();

            // Apply smart capitalization to existing elements
            document.querySelectorAll(".captext").forEach(el => {
                el.textContent = smartCapitalize(el.textContent);
            });
        });


                // Run this after the rows are injected
               document.querySelectorAll('.pill.pill-head').forEach(el => {
          const text = (el.textContent || '')
            .replace(/^•\s*/, '')     // remove the bullet
            .trim()
            .toLowerCase();

          // reset possible variants
          el.classList.remove('pill-head', 'pill-branch', 'pill-regional');

          if (['branch', 'branch office'].includes(text)) {
            el.classList.add('pill-branch');      // Branch color
          } else if (['regional', 'regional office', 'reginol', 'reginol office'].includes(text)) {
            el.classList.add('pill-regional');    // Regional color
          } else {
            el.classList.add('pill-head');        // Head Office / default
          }
        });



    </script>

    <!-- End table and card sorting -->

</footer>
